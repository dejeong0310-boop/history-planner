# -*- coding: utf-8 -*-
"""컴퓨팅기초(016)_3차 프로젝트 구현_9조.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MXw7afXTcElDgR8hfwmdxy1DsTxbHB1A
"""

# 코딩 환경 설정하기 - Streamlit

!pip install streamlit pyngrok

from pyngrok import ngrok

#Add your authentication token
!ngrok config add-authtoken 2o37AWfBIZjer6qm4fuIVoQa7P5_7qv6Zd58Xf9JXoZUgFTmD

!pip install folium

# 코딩 환경 설정하기 - 드라이브 마운트

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# import folium
# 
# 
# ###########################################################################
# # sidebar 기능들
# st.sidebar.title("MENU")
# selection = st.sidebar.selectbox("선택하기", ["홈", "MY 플래너", "추천코스 돌아보기", "지도로 모아보기"])
# 
# ############################################################################
# # 사용할 함수들
# # 1. 일정 데이터프레임 생성 함수
# def create_frame(day, time_slot, session_key) :
#   st.write("")     # 공백 추가
#   st.subheader("2. 일정표")
#   # 세션 상태에 데이터프레임이 없으면 생성하고, 있으면 기존 것을 사용.
#   if session_key not in st.session_state :
#     frame = pd.DataFrame(index = time_slot, columns = day).fillna(" ")  # 누락된 값을 빈 문자열로 채움. 빈 셀에 데이터를 쉽게 추가하기 위함.
#     st.session_state[session_key] = frame
#   return st.session_state[session_key]
# 
# # 2. 일정 추가 함수
# def add_schedule(days, time_slots, session_key) :
#   st.write("")   # 공백 추가
#   st.subheader("3. 일정 추가하기")
#   day = st.selectbox("날짜를 선택하세요.", options = days)
#   time_slot = st.selectbox("시간대를 선택하세요.", options = time_slots)
#   user_input = st.text_area(f"{day} - {time_slot}에 추가할 일정을 입력하세요 : ")
# 
#   # 추가하기 버튼 클릭 시
#   if st.button('추가하기') :
#     if user_input :  # 사용자가 입력했을 경우
#       st.session_state[session_key].at[time_slot, day] = user_input
#       st.rerun() # 화면 새로고침
#     else :
#       st.warning("일정을 입력해주세요!") # 입력이 없을 경우 경고 표시
# 
# 
# # 3. 추천코스 딕셔너리를 dataframe으로 변환하는 함수
# def table(x):
#    x_df = pd.DataFrame(x).T
#    x_df.columns = [f'{n+1}일차' for n in range(x_df.shape[1])]
#    st.dataframe(x_df, use_container_width=True)
# 
# 
# 
# #############################################################################
# # selection마다 화면 꾸미기
# # 1. 홈 화면
# if selection == '홈' :
#   st.title("🗺️역사 답사 플래너_강원도 편🗺️")
#   st.markdown("""역사 답사 플래너에 오신 것을 환영합니다!
# 이 플래너에서는 '강원도' 지역 답사를 계획할 수 있습니다.
# 저희와 함께 역사 속으로 떠나는 여정을 시작해보아요😁
# """)
# 
#   with st.expander("역사 답사 플래너에는 어떤 기능이 있나요?") :
#     st.write("📒MY 플래너📒")
#     st.write("🛣️추천코스 돌아보기🛣️")
#     st.write("🗺️지도로 시대별 유적지 모아보기🗺️")
# 
#   st.image("/content/drive/MyDrive/2024-2 컴기 3차 프로젝트/홈 화면 사진.jpg", caption="삼척 죽서루", use_container_width=True)  # 사진 별도 첨부
# 
# 
# 
# # 2. 마이 플래너
# elif selection == 'MY 플래너' :
#   st.title('MY 플래너')
#   st.write('여행 일정을 설정하고, 나의 템플릿 안에 일정을 채워넣을 수 있어요.')
# 
#   st.write("")  #공백 추가
#   st.subheader("1. 여행 일정 선택하기")
#   schedule = st.selectbox("여행 일정을 선택하세요.", ["1. 당일치기", "2. 1박 2일", "3. 2박 3일"])
# 
#   # 공통 시간대
#   time_slots = ["오전 일정", "중식", "오후 일정", "석식"]
# 
#   # schedule_templates 딕셔너리로 일정 템플릿 관리
#   schedule_templates = {
#       "1. 당일치기" : ['1일차'],
#       "2. 1박 2일" : ['1일차', '2일차'],
#       "3. 2박 3일" : ['1일차', '2일차', '3일차']
#   }
# 
#   # schedule 값에 따라 세션 키 생성
#   template_key = f"template_{schedule.replace(' ', '_')}" # 선택된 일정에 따라 개별 세션 키 생성. '1. 당일치기' 사이 공백을 _로 바꿈.
# 
#   if schedule in schedule_templates :
#     days = schedule_templates[schedule] # 선택된 일정에 맞는 날짜 배열
# 
#     # 일정 데이터프레임 생성
#     template = create_frame(days, time_slots, template_key)
#     st.dataframe(template, use_container_width=True)
# 
#     # 일정 추가
#     add_schedule(days, time_slots, template_key)
# 
# 
# 
# # 3. 추천코스 돌아보기
# elif selection == '추천코스 돌아보기' :
#   st.title('추천코스 돌아보기')
#   st.sidebar.header('어떤 코스를 추천받고 싶으신가요?')
#   course = st.sidebar.radio('다음과 같은 추천코스가 준비되어 있습니다', ('시대별 추천코스', '시설 종류별 추천코스', '우천 시 추천코스'))
# 
#   if course == '시대별 추천코스' :
#     st.write('시대별 추천코스')
#     st.write('선사시대 추천코스')
#     course25 = {'오전 일정' : ['혈거유지', '용암리 선사유적'],'중식' : [' ', '용암추어탕'], '오후 일정': ['천전리 지석묘군', ' '], '석식': ['강산숯불갈비', ' ']}
#     table(course25)
# 
#     st.write('삼국시대 추천코스')
#     course26 = {'오전 일정' : ['강릉 굴산사지', '경천묘'], '오후 일정' : ['평창 수항리사지', '원주 거돈사지'], '석식' : ['수향막국수', '농부가']}
#     table(course26)
# 
#     st.write('통일신라시대 추천코스')
#     course27 = {'오전 일정' : ['요선정, 요선암'], '중식' : ['운학식당'], '오후 일정' : ['해가사의 터']}
#     table(course27)
# 
#     st.write('고려시대 추천코스 - 바닷가 답사로')
#     course29 = {'오전 일정' : ['양양 동해 신묘지', '강릉향교'], '중식' : ['동해막국수', '메밀능이촌'], '오후 일정' : ['양양향교', '삼척 죽서루']}
#     table(course29)
# 
#     st.write('고려시대 추천코스 - 원주 근처 답사로')
#     course31 = {'오전 일정' : ['용운사지 석조비로자나불좌상', '영월 무릉리 마애여래좌상, 서곡정사석조약사여래입상'], '중식' : ['문가소반', '동대산식당'], '오후 일정' : ['원주 흥양리 마애불좌상', '석조보살좌상']}
#     table(course31)
# 
#     st.write('고려시대 추천코스 - 춘천 근처 답사로')
#     course1 = {'오전 일정' : ['장절공신숭겸장군묘역, 한송사 석조보살좌상', '석조보살좌상'], '중식' : ['미가쭈꾸미', '동대산식당'], '오후 일정' : ['김정묘역 문인석', '영월 무릉리 마애여래좌상']}
#     table(course1)
# 
#     st.write('조선시대 추천코스 - 영월 근처 답사로')
#     course2 = {'오전 일정' : ['영월 장릉, 금강정', '난고 김삿잣 유적지'], '중식' : ['홍기와', '해선식당'], '오후 일정' : ['영모전', '김삿갓 묘역'], '석식' : ['자갈치', ' ']}
#     table(course2)
# 
#     st.write('조선시대 추천코스 - 바닷가 답사로')
#     course3 = {'오전 일정' : ['동명서원, 오봉서원', '삼척 향교, 삼척영경묘'], '중식' : ['도산밥집', '남이네 식당'], '오후 일정' : ['송담서원', ' '], '석식' : ['풍림원', ' ']}
#     table(course3)
# 
#     st.write('조선시대 추천코스 - 철원 근처 답사로')
#     course4 = {'오전 일정' : ['김응하장군 묘비, 철원향교', '화음동정사지'], '중식' : ['토단', '산채골'], '오후 일정' : ['구은사', '춘천한백록묘역'], '석식' : ['콩사랑순두부', ' ']}
#     table(course4)
# 
#     st.write('근대 추천코스')
#     course5 = {'오전 일정' : ['원주역 급수탑, 구 조선식산은행 원주지점', '도계역 급수탑'], '중식' : ['오대산 산채정식', '능나도'], '오후 일정' : ['운암정', '꺼먹다리'], '석식' : ['원주축협 한우프라자', ' ']}
#     table(course5)
# 
#     st.write('현대 추천코스 - 동부 위주')
#     course6 = {'오전 일정' : [' ', '태백 경찰서 망루'], '중식' : [' ', '행복 칼국수'], '오후 일정' : ['만경대, 동해향교', '하고사리역, (구)태백 등기소'], '석식' : ['어향', ' ']}
#     table(course6)
# 
#     st.write('현대 추천코스 - 서부 위주')
#     course7 = {'오전 일정' : ['철원 노동당사'], '중식' : ['역전식당'], '오후 일정' : ['양구 해시계']}
#     table(course7)
# 
# 
#   elif course == '시설 종류별 추천코스' :
#     st.write('시설 종류별 추천코스')
#     st.write('안보 관광 코스 - 철원')
#     course8 = {'오전 일정' : [' ', '백마고지 위령비와 기념관, 두루미 평화마을'], '중식' : [' ', '넘치는 집 식당'], '오후 일정' : ['월정리역, 군탄공원과 전역비', '제2땅굴'], '석식' : ['농가', '민들레맛고을']}
#     table(course8)
# 
#     st.write('안보 관광 코스 - 양구&화천')
#     course9 = {'오전 일정' : [' ', '두타연 평화누리길'], '중식' : [' ', '전주식당'], '오후 일정' : ['643고지전투전적비', 'DMZ펀치볼둘레길'], '석식' : ['남가식당', '해안맛집']}
#     table(course9)
# 
#     st.write('안보 관광 코스 - 고성&강릉')
#     course10 = {'오전 일정' : [' ', '김일성 별장'], '중식' : [' ', '초도반점'], '오후 일정' : ['통일안보공원', '강릉 통일공원'], '석식' : ['해금강한식당', '바다마을 횟집']}
#     table(course10)
# 
#     st.write('고택 추천코스 - 고성&양양')
#     course11 = {'오전 일정' : [' ', '김성래 가옥'], '중식' : [' ', '바다한그릇'], '오후 일정' : ['고성 어명기 고택, 함정균 가옥', '김택준 가옥'], '석식' : ['원주마을보점', '양양버거']}
#     table(course11)
# 
#     st.write('고택 추천코스 - 강릉&영월')
#     course30 = {'오전 일정' : [' ', '강릉 오죽헌'], '중식' : [' ', '강릉감자옹심'], '오후 일정' : ['강릉 해운정, 강릉 오금집', '김종길 가옥, 고진하 가옥'], '석식': ['명가네 손칼국수', '연당시골밥상']}
#     table(course30)
# 
#     st.write('종교성지 추천코스 - 근대~현대')
#     course12= {'오전 일정' : [' ', '모곡 피정의 집'], '중식' : [' ', '호박이네'], '오후 일정' : ['원동성당', '제따와나선원'], '석식' : ['원주칼국수', '우나멜로']}
#     table(course12)
# 
#     st.write('종교성지 추천코스 - 삼국, 근대, 현대')
#     course13 = {'오전 일정' : [' ', '이효석 문학관'], '중식' : [' ', '메밀마당'], '오후 일정' : ['김삿갓 문학관', '월정사 성보박물관'], '석식' : ['노루목 상회식당', '동대산식당']}
#     table(course13)
# 
#     st.write('궁, 성 추천코스 - 삼국, 고려, 조선')
#     course14 = {'오전 일정' : [' ', '원주 강원감영'], '중식' : [' ', '장진우식당'], '오후 일정' : ['정선 정양산성, 영월 정양산성', '원주 영원산성'], '석식' : ['초원가든', '정이가든']}
#     table(course14)
# 
#     st.write('궁, 성 추천코스 - 고려, 조선')
#     course15 = {'오전 일정' : ['원주 강원감영', '강릉 임영원 삼문'], '중식' : ['장진우 식당', '벌집'], '오후 일정' : ['원주 영원산성', '강릉 대호도부 관아'], '석식' : ['정이가든', '동해일미']}
#     table(course15)
# 
#     st.write('민속마을, 생가 추천코스 - 영월&평창')
#     course16 = {'오전 일정' : ['이효석 생가', '영월 섶다리 마을'], '중식' : ['메밀꽃필무렵', '섶다리짬뽕'], '오후 일정' : ['충주집(이효석 문학관)', '강원 영월 김삿갓면'], '석식' : ['허생원봉평메밀국수', '옥동양어장횟집']}
#     table(course16)
# 
#     st.write('민속마을, 생가 추천코스 - 동해안')
#     course17 = {'오전 일정' : [' ', '청정신흥마을'], '중식' : [' ', '관촌쉼터'], '오후 일정' : ['허난설헌 솔숲', '삼척 신리 너와집과 민속유물'], '석식' : ['다송가든', '너와 와이너리']}
#     table(course17)
# 
#     st.write('민속마을, 생가 추천코스 - 문학')
#     course18 = {'오전 일정' : [' ', '이효석 생가'], '중식' : [' ', '메밀마당'], '오후 일정' : ['김유정 문학촌', '충주집(이효석 생가)'], '석식' : ['시루', '메밀마당']}
#     table(course18)
# 
#     st.write('사찰 추천코스 - 동해안')
#     course19 = {'오전 일정' : [' ', '감추사, 삼화사'], '중식' : [' ', '명옥이네'], '오후 일정' : ['영은사, 천은사', '보현사'], '석식' : ['천은사 밥상', '시골밥상']}
#     table(course19)
# 
#     st.write('사찰 추천코스 - 태백')
#     course20 = {'오전 일정' : [' ', '심원암 토불 및 부도'], '중식' : [' ', '소롯골 가든'], '오후 일정' : ['서광사, 심원사', '장명사, 청원사'], '석식' : ['별미묵밥', '사랑방']}
#     table(course20)
# 
#     st.write('사찰 추천코스 - 원주&평창')
#     course21 = {'오전 일정' : ['구룡사', '보문사'], '중식' : ['하림식', '운채'], '오후 일정' : ['입석사', '월정사 적멸보궁'], '석식' : ['더석경', '동대산식당']}
#     table(course21)
# 
#     st.write('유적지 추천코스 - 조선시대 유교 교육 기관')
#     course22 = {'오전 일정' : ['용산서원', '강릉향교'], '중식' : ['용추골미궁순대', '메밀능이촌'], '오후 일정' : ['삼척향교', '송담서원'], '석식' : ['삼고정문', '금광리 소양가든']}
#     table(course22)
# 
#     st.write('유적지 추천코스 - 영월의 단종과 김삿갓')
#     course23 = {'오전 일정' : ['영월 장릉', '난고 김삿갓 유적지'], '중식' : ['장릉 도깨비장터', '노루목상회식당'], '오후 일정' : ['영모전', '김삿갓 묘역'], '석식' : ['고향칡칼국수', '동해안영월본점']}
#     table(course23)
# 
# 
#   else :
#     st.write('우천 시 추천코스')
#     course24 = {'오전 일정' : [' ', '이효석 문학관'], '중식' : [' ', '메밀마당'], '오후 일정' : ['김삿갓 문학관', '월정사 성보박물관'], '석식' : ['노루목 상회식당', '동대산식당']}
#     table(course24)
# 
# 
# 
# # 4. 지도로 시대별 역사유적지 모아보기
# 
# elif selection == '지도로 모아보기' :
#   st.title('시대별 주요 유적지 위치를 알려드립니다.')
# 
#   st.sidebar.header('어느 시대를 보고 싶으신가요?')
#   age = st.sidebar.radio('시대 선택하기', ('선사시대', '삼국시대', '통일신라시대', '고려시대', '조선시대', '근현대'))
# 
#   if age == '선사시대' : #선사
#     m1 = folium.Map(location = [37.8228, 128.1555], zoom_start = 8)
#     folium.Marker([37.8872697444, 127.7382702929], tooltip="혈거유지").add_to(m1)
#     folium.Marker([38.0935894289, 127.6993760163], tooltip="용암리선사유적").add_to(m1)
#     folium.Marker([37.9299488134, 127.7758128264], tooltip="천전리 지석묘군").add_to(m1)
#     st.components.v1.html(m1._repr_html_(), width=800, height=600)
#   elif age == '삼국시대' : #삼국시대
#     m2 = folium.Map(location = [37.8228, 128.1555], zoom_start = 8)
#     folium.Marker([37.7072681694, 128.8918046506], tooltip="강릉 굴산사지").add_to(m2)
#     folium.Marker([37.1837757965, 127.8641739277], tooltip="경천묘").add_to(m2)
#     folium.Marker([37.5671696408, 128.5610526025], tooltip="평창 수항리사지").add_to(m2)
#     folium.Marker([37.1929678624, 127.7926745506], tooltip="원주 거돈사지").add_to(m2)
#     st.components.v1.html(m2._repr_html_(), width=800, height=600)
#   elif age == '통일신라시대' : #통일신라시대
#     m3 = folium.Map(location = [37.8228, 128.1555], zoom_start = 8)
#     folium.Marker([37.2983033027, 128.2602404865], tooltip="요선정").add_to(m3)
#     folium.Marker([37.2983033027, 128.2602404865], tooltip="요선암").add_to(m3)
#     folium.Marker([37.4734504410, 129.1628625232], tooltip="해가사의 터").add_to(m3)
#     st.components.v1.html(m3._repr_html_(), width=800, height=600)
#   elif age == '고려시대' : #고려시대
#     m4 = folium.Map(location = [37.8228, 128.1555], zoom_start = 8)
#     folium.Marker([38.1096776836, 128.6376845816], tooltip="양양동해신묘지").add_to(m4)
#     folium.Marker([37.7635561721, 128.8952470467], tooltip="강릉향교").add_to(m4)
#     folium.Marker([38.0786140146, 128.6060967459], tooltip="양양향교").add_to(m4)
#     folium.Marker([37.4411041340, 129.1612414419], tooltip="삼척 죽서루").add_to(m4)
#     folium.Marker([37.4620330265, 127.8903884773], tooltip="용운사지 석조비로자나불좌상").add_to(m4)
#     folium.Marker([37.2973367787, 128.2618959214], tooltip="영월 무릉리마애여래좌상").add_to(m4)
#     folium.Marker([37.1711193420, 128.3338515028], tooltip="서곡정사석조약사여래입상").add_to(m4)
#     folium.Marker([37.3604863733, 128.0362949423], tooltip="원주 흥양리마애불좌상").add_to(m4)
#     folium.Marker([37.7189028985, 128.6029831025], tooltip="석조보살좌상").add_to(m4)
#     folium.Marker([37.9032942352, 127.6619378797], tooltip="장절공신숭겸장군묘역").add_to(m4)
#     folium.Marker([37.8639560810, 127.7539001185], tooltip="한송사 석조보살좌상").add_to(m4)
#     folium.Marker([37.8407580211, 127.7132322839], tooltip="김정묘역 문인석").add_to(m4)
#     st.components.v1.html(m4._repr_html_(), width=800, height=600)
#   elif age == '조선시대' : #조선시대
#     m5 = folium.Map(location = [37.8228, 128.1555], zoom_start = 8)
#     folium.Marker([37.1973824361, 128.4519679070], tooltip="영월 장릉").add_to(m5)
#     folium.Marker([37.1852871070, 128.4784353347], tooltip="금강정").add_to(m5)
#     folium.Marker([37.0795432684, 128.6017551925], tooltip="난고 김삿갓 유적지").add_to(m5)
#     folium.Marker([37.1899697232, 128.4690332621], tooltip="영모전").add_to(m5)
#     folium.Marker([37.0832567338, 128.6018800715], tooltip="김삿갓 묘역").add_to(m5)
#     folium.Marker([38.1110023752, 128.6297408168], tooltip="동명서원").add_to(m5)
#     folium.Marker([37.7108663466, 128.8194360565], tooltip="오봉서원").add_to(m5)
#     folium.Marker([37.4501809896, 37.4501809896], tooltip="삼척향교").add_to(m5)
#     folium.Marker([37.3878475279, 129.0779533073], tooltip="삼척영경묘").add_to(m5)
#     folium.Marker([37.6929622184, 128.9292100595], tooltip="송담서원").add_to(m5)
#     folium.Marker([38.2391689611, 127.2135133910], tooltip="철원향교").add_to(m5)
#     folium.Marker([38.0433474598, 127.5177385494], tooltip="화음동정사지").add_to(m5)
#     folium.Marker([38.2554690921, 127.4737918063], tooltip="구은사").add_to(m5)
#     folium.Marker([37.9000977626, 127.6822250153], tooltip="춘천한백록묘역").add_to(m5)
#     st.components.v1.html(m5._repr_html_(), width=800, height=600)
#   elif age == '근현대' : #근현대
#     m6 = folium.Map(location = [37.8228, 128.1555], zoom_start = 8)
#     folium.Marker([37.3571156150, 127.9448699558], tooltip="원주역 급수탑").add_to(m6)
#     folium.Marker([37.3489694554, 127.9514307123], tooltip="구 조선식산은행 원주지점").add_to(m6)
#     folium.Marker([37.2268403735, 129.0435390639], tooltip="도계역 급수탑").add_to(m6)
#     folium.Marker([37.49628351821, 127.9803265633], tooltip="운암정").add_to(m6)
#     folium.Marker([38.1060946985, 127.7619282638], tooltip="꺼먹다리").add_to(m6)
#     folium.Marker([38.2552751974, 127.2019861959], tooltip="철원 노동당사").add_to(m6)
#     folium.Marker([38.1050352210, 127.9893075573], tooltip="양구 해시계").add_to(m6)
#     st.components.v1.html(m6._repr_html_(), width=800, height=600)
#

# Streamlit 실행하기

!streamlit run app.py &> /dev/null &
public_url = ngrok.connect(8501)
print(f"Streamlit is running at {public_url}")